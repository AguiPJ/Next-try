{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-unfetch';\n\nvar NewsList = function NewsList(props) {\n  return __jsx(Layout, null, props.newList.map(function (item, key) {\n    return __jsx(\"nav\", {\n      key: key\n    }, __jsx(Link, {\n      as: \"/n/\".concat(item['room number']),\n      href: \"/n?id=\".concat(item.title.slice(0, 5))\n    }, __jsx(\"a\", null, item.title)), __jsx(\"hr\", null));\n  }));\n};\n\nNewsList.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"http://localhost:5000/NewsList?skip=0&limit=10\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            newList: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default NewsList;","map":{"version":3,"sources":["E:\\Users\\jose\\WebstormProjects\\next\\pages\\newList.js"],"names":["React","Layout","Link","fetch","NewsList","props","newList","map","item","key","title","slice","getInitialProps","res","json","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SACb,MAAC,MAAD,QAEQA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,UAACC,IAAD,EAAMC,GAAN;AAAA,WACd;AAAK,MAAA,GAAG,EAAEA;AAAV,OACI,MAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAAC,aAAD,CAAZ,CAAR;AAAuC,MAAA,IAAI,kBAAWA,IAAI,CAACE,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAmB,CAAnB,CAAX;AAA3C,OACI,iBAAIH,IAAI,CAACE,KAAT,CADJ,CADJ,EAII,iBAJJ,CADc;AAAA,GAAlB,CAFR,CADa;AAAA,CAAjB;;AAcAN,QAAQ,CAACQ,eAAT;AAAA;AAAA;AAAA;AAAA,yBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJT,KAAK,kDADD;;AAAA;AACjBU,UAAAA,GADiB;AAAA;AAAA,iBAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEjBC,UAAAA,IAFiB;AAGvBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAHuB,2CAIhB;AACHT,YAAAA,OAAO,EAACS;AADL,WAJgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AASA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Link from \"next/link\";\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst NewsList = (props)=>(\r\n    <Layout>\r\n        {\r\n            props.newList.map((item,key)=>(\r\n                <nav key={key}>\r\n                    <Link as={`/n/${item['room number']}`} href={`/n?id=${item.title.slice(0,5)}`}>\r\n                        <a>{item.title}</a>\r\n                    </Link>\r\n                    <hr/>\r\n                </nav>\r\n            ))\r\n        }\r\n    </Layout>\r\n);\r\nNewsList.getInitialProps = async function(){\r\n    const res = await  fetch(`http://localhost:5000/NewsList?skip=0&limit=10`);\r\n    const data = await res.json();\r\n    console.log(data);\r\n    return {\r\n        newList:data\r\n    }\r\n};\r\n\r\nexport default NewsList;"]},"metadata":{},"sourceType":"module"}